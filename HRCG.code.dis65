### 6502bench SourceGen dis65 v1.0 ###
{
"_ContentVersion":4,
"FileDataLength":2048,
"FileDataCrc32":-349897975,
"ProjectProps":{
"CpuName":"65C02",
"IncludeUndocumentedInstr":false,
"TwoByteBrk":false,
"EntryFlags":32702671,
"AutoLabelStyle":"Simple",
"AnalysisParams":{
"AnalyzeUncategorizedData":true,
"DefaultTextScanMode":"LowHighAscii",
"MinCharsForString":4,
"SeekNearbyTargets":true,
"UseRelocData":false,
"SmartPlpHandling":false,
"SmartPlbHandling":true},

"PlatformSymbolFileIdentifiers":["RT:Apple/F8-ROM.sym65",
"RT:Apple/Cxxx-IO.sym65",
"RT:Apple/C08x-DiskII.sym65",
"RT:Apple/Applesoft.sym65",
"RT:Apple/DOS33.sym65"],
"ExtensionScriptFileIdentifiers":["RT:Apple/ProDOS8.cs",
"RT:Apple/VisHiRes.cs"],
"ProjectSyms":{
"blink_delay":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"cursor blink delay",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"blink_delay",
"Value":80,
"Source":"Project",
"Type":"Constant",
"LabelAnno":"None"},

"MON_BELL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Sound bell unconditionally",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MON_BELL",
"Value":64477,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"}}},

"AddressMap":[{
"Offset":0,
"Addr":36352}],
"TypeHints":[{
"Low":0,
"High":0,
"Hint":"Code"},

{
"Low":3,
"High":3,
"Hint":"Code"},

{
"Low":117,
"High":117,
"Hint":"Code"},

{
"Low":281,
"High":281,
"Hint":"Code"},

{
"Low":383,
"High":383,
"Hint":"Code"},

{
"Low":427,
"High":427,
"Hint":"Code"},

{
"Low":467,
"High":467,
"Hint":"Code"},

{
"Low":494,
"High":494,
"Hint":"Code"},

{
"Low":540,
"High":540,
"Hint":"Code"},

{
"Low":548,
"High":548,
"Hint":"Code"},

{
"Low":556,
"High":556,
"Hint":"Code"},

{
"Low":577,
"High":577,
"Hint":"Code"},

{
"Low":585,
"High":585,
"Hint":"Code"},

{
"Low":593,
"High":593,
"Hint":"Code"},

{
"Low":601,
"High":601,
"Hint":"Code"},

{
"Low":628,
"High":628,
"Hint":"Code"},

{
"Low":636,
"High":636,
"Hint":"Code"},

{
"Low":655,
"High":655,
"Hint":"Code"},

{
"Low":672,
"High":672,
"Hint":"Code"},

{
"Low":687,
"High":687,
"Hint":"Code"},

{
"Low":700,
"High":700,
"Hint":"Code"},

{
"Low":714,
"High":714,
"Hint":"Code"},

{
"Low":727,
"High":727,
"Hint":"Code"},

{
"Low":773,
"High":773,
"Hint":"Code"},

{
"Low":812,
"High":812,
"Hint":"Code"},

{
"Low":851,
"High":851,
"Hint":"Code"}],
"StatusFlagOverrides":{
},

"Comments":{
"6":"version number * 10",
"9":"user subroutine A",
"12":"user subroutine B",
"48":"connect DOS to our handlers",
"51":"select full screen graphics",
"54":"select hires graphics",
"63":"actually enable graphics mode",
"97":"keypress state. $80 after ^A, $40 after ^O, or $00",
"98":"$20 (hires1) or $40 (hires2)",
"99":"$7f if inverse video active, $00 otherwise",
"100":"$80=overstrike, $C0=complement, $00=no mask",
"101":"$60 to use second screen for overlay (^O ^T/^R)",
"102":"$FF if wrap mode, $00 if scroll",
"103":"$80=lower case, $00=upper",
"104":"pointer to active charset",
"106":"save 8 bytes above during block mode",
"114":"$ff=block mode on, $00=off",
"115":"home col in block mode, or else $00",
"116":"home row in block mode, or else $00",
"117":"restore char to text screen",
"119":"we reuse X as a counter",
"121":"text screen low byte conveniently",
"123":"matches low byte for hires line text*8",
"125":"convert text screen hi byte to hires line",
"127":"text 04..07 -\u003e 1C..1F",
"129":"-\u003e 3C..3F (page 1) or 5C..5F (page 2) ",
"132":"== 7th line of each 8-line char",
"134":"initial countdown -- invert almost immediately",
"136":"grab the 7th (cursor) line to invert it",
"138":"also save it on the stack",
"139":"count up \"random\" KEYIN value 0000..FFFF",
"141":"check for 8-bit wrap",
"143":"and propagate to high byte",
"145":"did we cycle to $FFFF X times?",
"146":"no, not yet time to invert cursor",
"148":"invert cursor line",
"150":"and write it to screen",
"152":"countdown until next invert",
"154":"key pressed?",
"157":"no, continue cycling",
"159":"an eternity later, a key is pressed",
"160":"restore the original 7th line",
"163":"??",
"166":"??",
"168":"get keypress",
"171":"clear keyboard strobe",
"174":"if stack value \u003c $f8 (BIT preserved carry)",
"176":"save keypress",
"177":"esc flag (bit 7) set earlier?",
"180":"yes, this is ESC arg",
"182":"ESC pressed now?",
"186":"yes, ESC pressed",
"188":"set ESC flag for next time",
"191":"always",
"193":"return pressed?",
"200":"restore Y (horiz pos)",
"202":"restore A (the keypress)",
"203":"restore X",
"220":"\u0027J\u0027 -- do nothing",
"222":"disable escape state ($80-\u003e$00)",
"225":"ESC-@ ?",
"281":"preserve A/X/Y",
"299":"was set to $80 by Ctrl-A keypress",
"302":"so if carry set after ASL, key is arg to Ctrl-A",
"304":"control char 00..1f",
"308":"draw char to screen, probably",
"313":"1b..1f are not operations",
"315":"offset is 2*jump entry",
"317":"put jump table entry on stack",
"321":"for jump via RTS",
"325":"sets carry if contained $80",
"328":"execute function 00..1b",
"329":"^@ -- noop",
"331":"^A -- select charset",
"343":"^G -- sound bell",
"345":"^H move cursor left (no rubout)",
"371":"Ctrl-U -- noop",
"377":"Ctrl-X -- noop",
"382":"vector end",
"383":"^O ^A -- primary screen 1",
"385":"set flag indicating Ctrl-A was pressed",
"391":"convert digit 1..9 ($31..39) to $00..$08",
"393":"check if char was \u003c 1 or \u003e 9",
"395":"via unsigned cmp \u003e= $09, so $00..$08 are valid",
"397":"X = low byte of lowest charset in memory",
"400":"now compute page offset; 3 pages per charset",
"403":"A = A * 3 via temp",
"405":"A = high byte of desired charset",
"408":"questionable -- tests for zero page?",
"410":"select builtin charset, usually when 0 pressed",
"421":"write to hires 1 ($2000) now",
"439":"length of variable area",
"441":"save variables",
"444":"for when we delimit block",
"461":"write to hires 2 ($4000) now",
"467":"^O ^C -- complement",
"501":"length of variable area",
"503":"restore original variables",
"506":"saved during block begin",
"545":"sync the text screen",
"553":"sync the text screen",
"628":"^O ^N -- unused",
"636":"second ^O -- overstrike",
"638":"first ^O -- record in state machine",
"655":"^O ^P -- print",
"657":"plain ^P",
"672":"^O ^Q -- unused",
"687":"^R -- unused",
"689":"^O ^R",
"714":"plain ^T -- unused",
"716":"^O ^T",
"727":"^O ^V -- unused",
"729":"window-relative",
"733":"Ensure left is \u003c 40",
"754":"Ensure top is \u003c 24",
"767":"update block top if block mode",
"831":"set to $00 when not in block mode",
"834":"but should already have been $00 outside block mode",
"855":"zero out 13 bytes of variable data",
"892":"if waiting for arg to ^O,",
"895":"  cancel ^O and return",
"897":"enforced lowercase?",
"900":"no, unmodified char",
"902":"lowercase, but shift disengaged",
"904":"shift engaged; mode $c0-\u003e$80 sets followup lowercase",
"907":"always (unmodified initial char)",
"911":"key \u003c A, do not lowercase",
"913":"\u0027Z\u0027+1",
"915":"A-Z -- make it lowercase",
"917":"key is unmodified, so",
"918":"align $20..$7f to $00..$5f",
"920":"Multiply A by 2",
"921":"shift the overflow into high byte",
"923":"by 4",
"924":"shift again",
"926":"by 8",
"927":"shift again",
"930":"16-bit add (low)",
"933":"char bitmap (low)",
"935":"get high byte from 8x8 multiply",
"937":"limit to the 3 shifted bits",
"939":"16-bit add (high)",
"942":"char bitmap (high)",
"944":"get hires addr of first col of this row",
"947":"A is basl, add column position",
"949":"basl += col; dest addr to write to",
"951":"\u003cscreen = basl; source addr when combining",
"955":"eor $60 flips $20 to $40 and vice versa",
"958":"\u003escreen = bash, adjusted for source hires page",
"962":"recall original keypress value",
"964":"and store to text screen",
"966":"for (zp) indexing, X always 0",
"968":"line number in char",
"970":"load 7-pixel char line",
"972":"flip all bits if inverted",
"975":"check overstrike method",
"978":"if bit 7 clear, opaque",
"980":"if bit 6 set",
"982":"is inverse_video set ($7f)",
"985":"yes, bit 6 set when $7f",
"987":"combine (OR, blend) with source pixels",
"989":"always",
"991":"combine (AND) source with char mask",
"995":"flip (XOR) source with char mask (X=0)",
"997":"update screen (X=0)",
"999":"next char line",
"1002":"wrote 8 lines, done",
"1006":"(carry is clear)",
"1008":"next hires line is +$0400",
"1010":"adjust source addr for overlay mode again",
"1013":"update source addr",
"1015":"always",
"1017":"update horiz pos",
"1021":"did we exceed window width?",
"1023":"no, we are done",
"1025":"reset col to beginning of line",
"1029":"go to next line",
"1033":"check vertical pos",
"1035":"still within window",
"1037":"in wrap mode (bit 6)?",
"1040":"yes; wrap to top",
"1042":"scrolling; adjust pos to last line",
"1044":"scroll hires window",
"1047":"scroll text window and exit",
"1050":"set vert pos to top of window",
"1054":"reposition text mode cursor",
"1060":"save row number",
"1070":"return bash line 7 to line 0",
"1072":"inc dest line by 8 (row by 1)",
"1074":"restore row number",
"1076":"inc row",
"1078":"did we hit bottom?",
"1080":"yes, finish up",
"1082":"save row number (for next loop, above)",
"1083":"set basl/bash for next line",
"1086":"8 rows, char height",
"1088":"start at end of window line",
"1091":"copy byte",
"1095":"and move from right to left",
"1096":"until beginning of line",
"1098":"copied all 8 lines?",
"1099":"yes, next row (basl/h not inc\u0027d)",
"1114":"start next row",
"1145":"always",
"1151":"preserve line #",
"1157":"next line",
"1159":"until end of window",
"1161":"start at col 0",
"1170":"save starting column",
"1175":"clear 8 hires lines",
"1177":"load $7f or $00 for opaque mode",
"1183":"if opaque, skip to storing",
"1209":"end of screen?",
"1211":"nope, keep clearing line",
"1213":"one line complete",
"1214":"if all lines complete, done",
"1216":"restore starting column",
"1221":"hi byte adds $04 per line",
"1223":"update hi byte of screen address",
"1225":"next line -- always",
"1228":"get current text row",
"1230":"div by 2 *and* set carry if odd",
"1231":"save for indexing below",
"1232":"$20,$20,$21,$21,$22,$22,$23,$23, then repeat",
"1234":"(or $40,$40,$41... if page 2)",
"1237":"is the high byte",
"1239":"index is row/2",
"1242":"/2; carry from LSR becomes high bit",
"1243":"adjust for window left (ROR cleared carry)",
"1245":"is the low byte",
"1248":"12 bytes (24 lines)",
"1260":"unused area",
"1280":" space",
"1288":" !",
"1296":" \"",
"1304":" #",
"1312":" $",
"1320":" etc."},

"LongComments":{
"-2147483647":{
"Text":"6502bench SourceGen v1.7.3\r\n\r\nNote I omitted the first two bytes $00 $08 (file code length $0800) from this file. This may not have been a great idea, as you\u0027ll need to prepend them to the assembly output to create a working relocatable object file.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"311":{
"Text":"Control char 00..1f encountered in output string. Jump to corresponding function in table if 00..1a (@-Z), or do nothing (?) if 1b..1f. Note Ctrl-@ is not documented.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"3":{
"Text":"Per the documentation, this secondary entry point is used when the application does not want to use hires page 1 at all, only page 2. It skips clearing and enabling HIRES page 1.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"383":{
"Text":"Ctrl-A -- select charset.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"556":{
"Text":"Move the cursor backward one space.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"548":{
"Text":"Ctrl-F -- clear to end of page.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18":{
"Text":"Output our banner to hires screen.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"663":{
"Text":"Set overwrite (\"print\") mode, the default mode, where character bg and fg both replace underlying graphics.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1280":{
"Text":"Standard monochrome (1bpp) 7x8 font bitmap, 1 byte per character line, 8 consecutive bytes (lines) per character. High bit is unused. Covers 96 high ASCII chars A0-FF.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"329":{
"Text":"Jump table used by previous subroutine to handle control character input (with low byte -1 for RTS adjustment). Function names are based on the toolkit documentation, with the control char (\"CB\" for ^B) prepended. This is a state machine and a couple chars only have meaning after a ^O; those have e.g. \"COR\" for ^O ^R prepended.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9":{
"Text":"Vectors for user subroutines A (^O ^Y) and B (^O ^Z).\r\nThe user pokes these with the desired addresses. They are\r\nalso initialized on startup and when defaults are restored,\r\nso the value here is arbitrary.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"7":{
"Text":"Poked by the loader to point to the first alternate charset.\r\nAs this defaults to the builtin charset, both ^A 0 and ^A 1\r\nwill display the builtin charset if no alternates are loaded.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"391":{
"Text":"\r\nProcess ^A argument, the charset number to activate. Anything other than 1..9 selects the builtin charset. 1 selects the lowest charset in memory, 2 selects lowest + $0300, and so on.\r\n\r\nThere is no further bounds check on the charset number, so if you select charset 4 when 3 are loaded, you will get garbage. (Since LOADHRCG loads charsets directly below HRCG, charsets 4 and 5 would be HRCG code and charset 6 is $100 into the builtin charset, which effectively shifts uppercase to lowercase!)\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"872":{
"Text":"Amusingly, this sets the user jump vectors to a different RTS (return1)\r\nthan the one included in the file (return).",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"148":{
"Text":"Blink the cursor.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"117":{
"Text":"\r\nKSW handler\r\n\r\nWait for a keypress, blinking the cursor (an underscore) while waiting. The \"random\" KEYIN value is updated similarly to the monitor ROM, though at a different rate. Also handle ESC state and commands.\r\n\r\nOn entry, A is the char that was present on the text screen (the caller may have overwritten it with a cursor, and standard KSW restores it). Y is the horizontal cursor position (MON_CH).\r\n\r\nOn exit, A is the key pressed. X and Y are preserved.\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"206":{
"Text":"Handle key pressed in escape mode (in accumulator).",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"222":{
"Text":"Keypress is not IJKM (cursor keys). Disable ESC state going forward.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"263":{
"Text":"After ESC, ABCD and IJKM are cursor movement synonyms, except ABCD exits escape mode after one keypress, and IJKM remains in escape mode.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1151":{
"Text":"On entry, A/Y are the row/col to begin clearing from. Clears from this position to bottom of window.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1177":{
"Text":"If transparent mode is disabled, we just want to clear by writing 7 black (normal, $00)  or white (inverse, $7f) pixels. This conveniently corresponds to the value of inverse_video.  ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1242":{
"Text":"00, 50, a0 in table become 00, 28, 50 (even rows) or 80, a8, d0 (odd rows).",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1228":{
"Text":"Compute hires base address of a text line, the first line of every 8 line character; i.e. 0, 8, 16, ... The line# is the current text row. On exit, basl/bash has the address, and A has a copy of basl. \r\n\r\nThe high byte is the same for even/odd pairs, so we divide the row by 2; then take this modulo 4 and OR in the hires page.\r\n\r\nFor even/odd pairs the low byte is the same but with bit 7 clear (even) or set (odd). We can use a 12-byte (24/2) table lookup and set bit 7 according to even/odd.\r\n\r\nThe trick is the LSR A preserves this even/odd information in the carry, which is still available when we reach the ROR A, which rotates the carry into the high bit, exactly as we needed. The byte values in the address table are doubled to account for the ROR. So, for the 24 text lines, the hires address base will go\r\n\r\n2000, 2080, 2100, 2180, 2200, 2280, 2300, 2380,       0..7\r\n2028, 20a8, 2128, 21a8, 2228, 22a8, 2328, 23a8,       8..15\r\n2050, 20d0, 2150, 21d0, 2250, 22d0, 2350, 23d0        16..23\r\n\r\nas expected for each 8 line interval on the hires screen.",
"BoxMode":true,
"MaxWidth":80,
"BackgroundColor":0},

"909":{
"Text":"Charsets cover keys $20..$7f, so normally we align the effective char# to $00..$5f by subtracting $20 from the key. But if lowercase is enforced, we skip the adjustment for A-Z, as lowercase is uppercase+$20.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"920":{
"Text":"A now contains the index into the charset for this key, $00..$5f. We multiply this by 8 (bytes/char) to get the byte offset. Finally we add this offset to the active charset address to get the char\u0027s bitmap pointer. The bit manipulation below is just an 8x8=16bit multiply (really a 3-bit left shift of 8 bits into 16) followed by a 16-bit add.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1029":{
"Text":"Move the cursor to the next row, without changing the column -- a linefeed. Wrap or scroll as needed if we reached the bottom.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1025":{
"Text":"Move cursor to beginning of line (CR) and then fall through to linefeed (LF).",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"944":{
"Text":"charptr now points to the bitmap for this char.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"892":{
"Text":"Draw char to hires screen and (invisibly) to text screen, scrolling or wrapping both as needed.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"970":{
"Text":"Read a bitmap line, combine it with the source, and write it to the screen.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1166":{
"Text":"Load current H/V pos into Y/A and fall through to clear_eol.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1170":{
"Text":"Clear line from column Y, row A to end of that line.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1116":{
"Text":"Clear the last line to complete the scroll up.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1101":{
"Text":"Go to next hires line in 8-line group, at +$0400. By line 7 we will have added $1C00.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1064":{
"Text":"\r\nOn the last iteration through the start_eol line loop drawing hires lines 0..7 of row N, bash is $3c, $3d, $3e or $3f for line 7, and we wind up here again for line 0 of row N+1. (bash is not incremented to line 8.) AND #$E3 makes that $20, $21, $22, or $23, effectively taking bash back to line 0. Since bash always points to the next line (the copy source), we can now store this in screen (dest), increasing it by one row. basl/h is then recomputed after adding 1 to the row.\r\n\r\nEquivalently, a mask of $e3 zeros the 3 bits 4, 3, and 2. Assume these are zeroed in the address corresponding to line 0, the first of 8 lines. Then, adding $0400 to this address (to reach the next hires line) sets bit 2, and adding $0400 7 times to reach line 7 will set bits 4, 3 and 2 (0b111 == 7). So AND #$E3 is the same as subtracting $04*7==$1C (0b00011100) from the high byte, returning the pointer to line 0.\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1058":{
"Text":"Scroll hires window up one row, clearing the last row.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0}},

"Notes":{
"3":{
"Text":"I\u0027m not sure this is true -- it just seems to skip banner output.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-18751},

"100":{
"Text":"Looks like a bitfield. If bit 7 ($80) is set, character will overstrike (i.e. the background is ignored). If bit 6 ($40) is set, character will complement (in the shape of its fg or bg).  Apparently, \"overstrike\" and \"transparent\" modes ($80) are identical except sourcing from different pages; so are \"complement\" and \"reverse\" ($C0) modes. They are probably named in this odd way for mnemonic reasons, matching their control chars.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-7278960},

"163":{
"Text":"TODO -- why stack lookbehind",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-7278960},

"200":{
"Text":"Need to verify MON_CH is not updated. It\u0027s not clear it\u0027s absolutely necessary to restore Y based on the ROM. In particular, look at ESC-@ and cursor movement.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-18751},

"220":{
"Text":"How does doing nothing work for ESC J?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-7278960},

"892":{
"Text":"Below, \"caps lock\" refers to the default state where uppercase and lowercase are printed without modification (we should call it \"unmodified\" state) -- it does not force everything to uppercase. \"lowercase mode\" prints both as lowercase. \"shift\" prints the first char as unmodified, then switches to lowercase mode.",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0}},

"UserLabels":{
"117":{
"Label":"ksw_handler",
"Value":36469,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"281":{
"Label":"csw_handler",
"Value":36633,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"15":{
"Label":"start",
"Value":36367,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"20":{
"Label":"loop",
"Value":36372,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"584":{
"Label":"return",
"Value":36936,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"383":{
"Label":"CA_select_charset",
"Value":36735,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"427":{
"Label":"CB_begin_block",
"Value":36779,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"467":{
"Label":"CC_carriage_return",
"Value":36819,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"494":{
"Label":"CD_delimit_block",
"Value":36846,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"540":{
"Label":"CE_clear_eol",
"Value":36892,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"548":{
"Label":"CF_clear_eop",
"Value":36900,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"556":{
"Label":"CH_backspace",
"Value":36908,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"577":{
"Label":"CI_inverse_video",
"Value":36929,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1029":{
"Label":"CJ_linefeed",
"Value":37381,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"585":{
"Label":"CK_caps_lock",
"Value":36937,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"593":{
"Label":"CL_lower_case",
"Value":36945,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"601":{
"Label":"CM_unknown",
"Value":36953,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"Uncertain"},

"628":{
"Label":"CN_normal_video",
"Value":36980,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"636":{
"Label":"CO_option_sel",
"Value":36988,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"655":{
"Label":"CP_clear_page",
"Value":37007,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"672":{
"Label":"CQ_home_cursor",
"Value":37024,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"687":{
"Label":"COR_reverse",
"Value":37039,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"700":{
"Label":"CS_shift",
"Value":37052,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"714":{
"Label":"COT_transparent",
"Value":37066,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"727":{
"Label":"CV_textwin_ul",
"Value":37079,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"773":{
"Label":"CW_textwin_lr",
"Value":37125,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"812":{
"Label":"CY_textwin_full",
"Value":37164,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"851":{
"Label":"CZ_restore_default",
"Value":37203,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"329":{
"Label":"function_table",
"Value":36681,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"297":{
"Label":"csw1",
"Value":36649,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"311":{
"Label":"control_char",
"Value":36663,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"3":{
"Label":"hires2_entry",
"Value":36355,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"0":{
"Label":"hires1_entry",
"Value":36352,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"6":{
"Label":"version",
"Value":36358,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"325":{
"Label":"ret",
"Value":36677,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"391":{
"Label":"ctrl_a_arg",
"Value":36743,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"892":{
"Label":"draw_char",
"Value":37244,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"97":{
"Label":"key_state",
"Value":36449,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"99":{
"Label":"inverse_video",
"Value":36451,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"644":{
"Label":"set_overstrike",
"Value":36996,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"663":{
"Label":"COP_print",
"Value":37015,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"483":{
"Label":"COC_complement",
"Value":36835,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"805":{
"Label":"return1",
"Value":37157,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"708":{
"Label":"COS_scroll",
"Value":37060,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"806":{
"Label":"COW_wrap",
"Value":37158,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"102":{
"Label":"wrap_mode",
"Value":36454,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"848":{
"Label":"COY_userA",
"Value":37200,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"889":{
"Label":"COZ_userB",
"Value":37241,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"101":{
"Label":"overlay_mode",
"Value":36453,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"100":{
"Label":"transparent_mode",
"Value":36452,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"421":{
"Label":"COA_primary_hires1",
"Value":36773,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"461":{
"Label":"COB_primary_hires2",
"Value":36813,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"98":{
"Label":"hires_page",
"Value":36450,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"103":{
"Label":"lower_case",
"Value":36455,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1280":{
"Label":"builtin_charset",
"Value":37632,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1248":{
"Label":"hires_addr_tbl",
"Value":37600,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"12":{
"Label":"userB",
"Value":36364,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"9":{
"Label":"userA",
"Value":36361,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"7":{
"Label":"first_charset",
"Value":36359,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"410":{
"Label":"use_internal",
"Value":36762,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"414":{
"Label":"update_charset",
"Value":36766,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"104":{
"Label":"active_charset",
"Value":36456,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"853":{
"Label":"set_defaults",
"Value":37205,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"857":{
"Label":"zero",
"Value":37209,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"139":{
"Label":"jiffy",
"Value":36491,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"154":{
"Label":"checkkey",
"Value":36506,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"202":{
"Label":"doneA",
"Value":36554,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"203":{
"Label":"doneX",
"Value":36555,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"96":{
"Label":"esc_state",
"Value":36448,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"206":{
"Label":"esc_char",
"Value":36558,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"222":{
"Label":"not_esc_ijkm",
"Value":36574,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"235":{
"Label":"not_esc_null",
"Value":36587,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"245":{
"Label":"not_esc_e",
"Value":36597,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"255":{
"Label":"not_esc_f",
"Value":36607,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"268":{
"Label":"esc_c_or_m",
"Value":36620,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"263":{
"Label":"esc_a_or_k",
"Value":36615,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"200":{
"Label":"doneY",
"Value":36552,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"193":{
"Label":"check_cr",
"Value":36545,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1166":{
"Label":"clear_hv_eol",
"Value":37518,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1137":{
"Label":"clear_home",
"Value":37489,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1151":{
"Label":"clear_eowin",
"Value":37503,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1147":{
"Label":"clear_hv_eowin",
"Value":37499,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1170":{
"Label":"clear_eol",
"Value":37522,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1230":{
"Label":"compute_base",
"Value":37582,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1228":{
"Label":"compute_cur_base",
"Value":37580,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"814":{
"Label":"textwin_full",
"Value":37166,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"106":{
"Label":"var_save",
"Value":36458,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"114":{
"Label":"block_mode",
"Value":36466,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"115":{
"Label":"block_ch",
"Value":36467,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"116":{
"Label":"block_cv",
"Value":36468,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"837":{
"Label":"block",
"Value":37189,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1206":{
"Label":"store",
"Value":37558,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"991":{
"Label":"invert",
"Value":37343,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"770":{
"Label":"vtab",
"Value":37122,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"760":{
"Label":"settop",
"Value":37112,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"739":{
"Label":"setleft",
"Value":37091,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"917":{
"Label":"unmodified",
"Value":37269,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"909":{
"Label":"lower",
"Value":37261,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"920":{
"Label":"draw",
"Value":37272,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"997":{
"Label":"store",
"Value":37349,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"995":{
"Label":"complement",
"Value":37347,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1017":{
"Label":"chardone",
"Value":37369,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"970":{
"Label":"charline",
"Value":37322,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1057":{
"Label":"return",
"Value":37409,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1025":{
"Label":"cr_lf",
"Value":37377,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1054":{
"Label":"reposition",
"Value":37406,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1050":{
"Label":"wrap",
"Value":37402,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1058":{
"Label":"scroll",
"Value":37410,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1177":{
"Label":"clrline",
"Value":37529,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1227":{
"Label":"done",
"Value":37579,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1116":{
"Label":"clear_last",
"Value":37468,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1091":{
"Label":"copy_byte",
"Value":37443,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1064":{
"Label":"next_row",
"Value":37416,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"},

"1088":{
"Label":"start_eol",
"Value":37440,
"Source":"User",
"Type":"NonUniqueLocalAddr",
"LabelAnno":"None"}},

"OperandFormats":{
"7":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"builtin_charset",
"Part":"Low"}},

"32":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ksw_handler",
"Part":"Low"}},

"36":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ksw_handler",
"Part":"High"}},

"40":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"csw_handler",
"Part":"Low"}},

"44":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"csw_handler",
"Part":"High"}},

"104":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"builtin_charset",
"Part":"Low"}},

"106":{
"Length":8,
"Format":"Junk",
"SubFormat":"None",
"SymbolRef":null},

"152":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"blink_delay",
"Part":"Low"}},

"206":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"210":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"216":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"225":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"235":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"245":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"255":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"259":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"329":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"return",
"Part":"Low"}},

"331":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CA_select_charset",
"Part":"Low"}},

"333":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CB_begin_block",
"Part":"Low"}},

"335":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CC_carriage_return",
"Part":"Low"}},

"337":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CD_delimit_block",
"Part":"Low"}},

"339":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CE_clear_eol",
"Part":"Low"}},

"341":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CF_clear_eop",
"Part":"Low"}},

"343":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON_BELL",
"Part":"Low"}},

"345":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CH_backspace",
"Part":"Low"}},

"347":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CI_inverse_video",
"Part":"Low"}},

"349":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CJ_linefeed",
"Part":"Low"}},

"351":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CK_caps_lock",
"Part":"Low"}},

"353":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CL_lower_case",
"Part":"Low"}},

"355":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CM_unknown",
"Part":"Low"}},

"357":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CN_normal_video",
"Part":"Low"}},

"359":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CO_option_sel",
"Part":"Low"}},

"361":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CP_clear_page",
"Part":"Low"}},

"363":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CQ_home_cursor",
"Part":"Low"}},

"365":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COR_reverse",
"Part":"Low"}},

"367":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CS_shift",
"Part":"Low"}},

"369":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COT_transparent",
"Part":"Low"}},

"371":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"return",
"Part":"Low"}},

"373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CV_textwin_ul",
"Part":"Low"}},

"375":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CW_textwin_lr",
"Part":"Low"}},

"377":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"return",
"Part":"Low"}},

"379":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CY_textwin_full",
"Part":"Low"}},

"381":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CZ_restore_default",
"Part":"Low"}},

"410":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"builtin_charset",
"Part":"Low"}},

"412":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"builtin_charset",
"Part":"High"}},

"733":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"737":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"754":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"758":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"781":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"785":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"795":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"799":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"837":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"841":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"872":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"return1",
"Part":"Low"}},

"880":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"return1",
"Part":"High"}},

"909":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"913":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"1248":{
"Length":12,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1260":{
"Length":20,
"Format":"Junk",
"SubFormat":"Align256",
"SymbolRef":null},

"1280":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1288":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1296":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1304":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1312":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1320":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1328":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1336":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1344":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1352":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1360":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1368":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1376":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1384":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1392":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1400":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1408":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1416":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1424":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1432":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1440":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1448":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1456":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1464":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1472":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1480":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1488":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1496":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1504":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1512":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1520":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1528":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1536":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1544":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1552":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1560":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1568":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1576":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1584":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1592":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1600":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1608":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1616":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1624":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1632":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1640":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1648":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1656":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1664":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1672":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1680":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1688":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1696":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1704":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1712":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1720":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1728":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1736":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1744":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1752":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1760":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1768":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1776":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1784":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1792":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1800":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1808":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1816":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1824":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1832":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1840":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1848":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1856":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1864":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1872":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1880":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1888":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1896":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1904":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1912":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1920":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1928":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1936":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1944":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1952":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1960":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1968":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1976":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1984":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1992":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"2000":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"2008":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"2016":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"2024":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"2032":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"2040":{
"Length":8,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null}},

"LvTables":{
"117":{
"Variables":[{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"basl",
"Value":42,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"},

{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"bash",
"Value":43,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"},

{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"saveX",
"Value":235,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"}],
"ClearPrevious":false},

"281":{
"Variables":[{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"preserve Y",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"saveY",
"Value":53,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"},

{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"preserve X",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"saveX",
"Value":235,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"},

{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"preserve A",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"saveA",
"Value":255,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"}],
"ClearPrevious":false},

"391":{
"Variables":[{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"temp for multiply by 3",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"temp",
"Value":238,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"}],
"ClearPrevious":false},

"892":{
"Variables":[{
"DataDescriptor":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"screen address to read from",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"screen",
"Value":236,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"},

{
"DataDescriptor":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"pointer to this char bitmap",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"charptr",
"Value":238,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"}],
"ClearPrevious":false},

"1166":{
"Variables":[{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"starting column",
"HasWidth":true,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"hpos",
"Value":238,
"Source":"Variable",
"Type":"ExternalAddr",
"LabelAnno":"None"}],
"ClearPrevious":false}},

"Visualizations":[{
"Tag":"vis000500",
"VisGenIdent":"apple2-hi-res-bitmap-font",
"VisGenParams":{
"offset":1280,
"itemByteWidth":1,
"itemHeight":8,
"count":96}}],
"VisualizationAnimations":[],
"VisualizationSets":{
"1280":{
"Tags":["vis000500"]}},

"RelocList":{
},

"DbrValues":{
}}
